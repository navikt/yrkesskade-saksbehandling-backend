scalar LocalDate
scalar Instant
scalar Long

type Sak {
    sakId: ID!
    tema: String
    brukerIdentifikator: String!
    sakstype: String
    saksstatus: String
}

type BehandlingsPage {
    behandlinger: [Behandling]!
    antallSider: Int
    gjeldendeSide: Int
    totaltAntallBehandlinger: Long
}

type Behandling {
    behandlingId: ID!
    behandlingsfrist: Instant
    opprettetTidspunkt: Instant
    behandlingstype: String!
    saksbehandlingsansvarligIdent: String
    dokumentkategori: String
    brukerId: String
    brukerIdType: String
    status: String
    framdriftsstatus: String
    sak: Sak
}

type DetaljertBehandling {
    behandlingId: ID!,
    tema: String
    brukerId: String
    brukerIdType: String
    behandlendeEnhet: String
    saksbehandlingsansvarligIdent: String
    behandlingstype: String
    status: String
    behandlingsfrist: Instant
    journalpostId: String
    dokumentkategori: String
    systemreferanse: String
    framdriftsstatus: String
    opprettetTidspunkt: Instant
    opprettetAv: String
    endretAv: String
    sak: Sak
    behandlingResultater: [String]
    dokumenter: [DokumentInfo]
}

type DokumentInfo {
    dokumentinfoId: ID!
    tittel: String
    type: String
    opprettetTidspunkt: Instant!
    status: String
}

input Page {
    size: Int
    page: Int
}

input BehandlingSortering {
    sortFields: [BehandlingSortFieldType]
    sortDirection: SortDirectionType
}

enum SortDirectionType {
    ASC
    DESC
}

enum BehandlingSortFieldType {
    opprettetTidspunkt
    behandlingsfrist
}

input Behandlingsfilter {
    behandlingstype: String
    dokumentkategori: String
    status: String
}

input BehandlingPageRequest {
    behandlingsfilter: Behandlingsfilter
    page: Page!
}

input FerdigstillBehandling {
    behandlingId: ID!
    journalfoeringdetaljer: Journalfoeringdetaljer
}

input Journalfoeringdetaljer {
    avsender: String!
}

type Query {
    hentBehandlinger(page: Page!, behandlingSortering: BehandlingSortering): [Behandling]!
    hentEgneBehandlinger(status: String, page: Page!, behandlingSortering: BehandlingSortering): BehandlingsPage!
    hentAapneBehandlinger(behandlingsfilter: Behandlingsfilter, page: Page!, behandlingSortering: BehandlingSortering): BehandlingsPage!
    antallBehandlinger: Int!
    hentBehandling(behandlingId: ID!): DetaljertBehandling
    hentPerson(foedselsnummer: ID!): Person!
}

type Mutation {
    overtaBehandling(behandlingId: ID!): Behandling
    ferdigstillBehandling(ferdigstillBehandling: FerdigstillBehandling!): Behandling
    leggTilbakeBehandling(behandlingId: ID!): Behandling
    overforBehandlingTilLegacy(behandlingId: ID!, avviksgrunn: String!): Boolean!
}

type Person {
    navn: [Navn!]!
    kjoenn: [Kjoenn!]!
}

type Navn {
  fornavn: String!
  mellomnavn: String
  etternavn: String!
  forkortetNavn: String
}

type Kjoenn {
  kjoenn: KjoennType
}

enum KjoennType {
  MANN
  KVINNE
  UKJENT
}