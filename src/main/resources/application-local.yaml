NAIS_CLUSTER_NAME: lokal
KAFKA_BROKERS: http://localhost:9092
SAKSBEHANDLING_CLIENT_ID: api://dev-gcp.yrkesskade.yrkesskade-saksbehandling-backend/.default
AUTH_SERVER: https://fakedings.dev-gcp.nais.io/fake
AZURE_APP_JWK: local
AZURE_APP_WELL_KNOWN_URL: https://fakedings.dev-gcp.nais.io/fake/.well-known/openid-configuration
GCP_TEAM_PROJECT_ID: stub

server:
  port: 9081

application:
  pretty:
    name: "Kompys - LOCAL"

spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SASL_PLAINTEXT
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username="igroup" password="itest";
      schema.registry.url: http://localhost:8081
    consumer:
      group-id: srvc01
  datasource:
    url: jdbc:postgresql://localhost:5432/yrkesskade_saksbehandling
  flyway:
    enabled: true
  cloud:
    gcp:
      bigquery:
        enabled: false


funksjonsbrytere:
  enabled: false

kafka:
  topic:
    dokument-til-saksbehandling: privat-yrkesskade-dokument-til-saksbehandling
    brevutsending-bestilt: privat-yrkesskade-brevutsending-bestilt
    brevutsending-utfoert:
      name: privat-yrkesskade-brevutsending-utfoert
    aapen-oppgave-opprettet: aapen-oppgave-opprettet-v1-local
    aapen-oppgave-endret: aapen-oppgave-endret-v1-local

no.nav.security.jwt:
  issuer:
    azuread:
      discovery-url: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${SAKSBEHANDLING_CLIENT_ID}
      cookie_name: auth_token
  client:
    registration:
      dokarkiv-maskintilmaskin:
        token-endpoint-url: ${AUTH_SERVER}/token
        grant-type: client_credentials
        scope: dokarkiv
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      saf-maskintilmaskin:
        token-endpoint-url: ${AUTH_SERVER}/token
        grant-type: client_credentials
        scope: saf
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      saf-onbehalfof:
        token-endpoint-url: ${AUTH_SERVER}/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: saf
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      pdl-onbehalfof:
        token-endpoint-url: ${AUTH_SERVER}/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: pdl
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      pdl-clientcredentials:
        token-endpoint-url: ${AUTH_SERVER}/token
        grant-type: client_credentials
        scope: pdl
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      kodeverk-maskintilmaskin:
        token-endpoint-url: ${AUTH_SERVER}/token
        grant-type: client_credentials
        scope: api://dev-gcp.yrkesskade.yrkesskade-kodeverk/.default
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      oppgave-maskintilmaskin:
        token-endpoint-url: ${AUTH_SERVER}/token
        grant-type: client_credentials
        scope: oppgave
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic

rolle:
  saksbehandler: 044d1494-7e95-4392-86b1-555f4aa6d5c5

api:
  client:
    kodeverk:
      url: http://localhost:8080
    pdl:
      url: https://pdl-api.default
